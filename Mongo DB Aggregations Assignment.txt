							   MongoDB Aggregations Assignments-2


Creating Database:-  db.createCollection(“population”)
Now import the zip.json file using MongoDB Compass.

Atlanta Population

1. use db.zipcodes.find() to filter results to only the results where city is ATLANTA
and state is GA.
ans.	db.zipcodes.find({“city”: “ATLANTA”, “state”: “GA”}).pretty()

2. use db.zipcodes.aggregate with $match to do the same as above.	
ans.	db.zipcodes.aggregate([{$match: {“city”: “ATLANTA”, “state”: “GA”}}]).pretty()

3. use $group to count the number of zip codes in Atlanta.	
ans.	db.zipcodes.aggregate([{$match: {"city": "ATLANTA"}}, {$group:{_id:"$city", count:{$sum: 1}}}])

4. use $group to find the total population in Atlanta.
ans.	db.zipcodes.aggregate([{$match: {"city": "ATLANTA"}}, {$group: {_id: "$city", totalPop: {$sum: "$pop"}}}])

Populations By State
1. use aggregate to calculate the total population for each state
ans.	db.zipcodes.aggregate([{$group: {_id: "$state", totalPop: {$sum: "$pop"}}}])

2. sort the results by population, highest first
ans.	db.zipcodes.aggregate([{$sort:{"pop": -1}}]).pretty()

3. limit the results to just the first 3 results. What are the top 3 states in
   population?
ans.	db.zipcodes.aggregate([{$sort:{"pop": -1}},{$limit: 3}]).pretty()

Populations By City

1. use aggregate to calculate the total population for each city (you have to use city/state combination). 
   You can use a combination for the _id of the $group: {city: '$city', state: '$state' }
ans.	db.zipcodes.aggregate([{$group: {_id: {state: "$state", city: "$city"}, pop: {$sum: "$pop"}}}])

2. sort the results by population, highest first
ans.	db.zipcodes.aggregate([{ $group: {_id: {state: "$state", city: "$city"}, pop: {$sum: "$pop"}}}, {$sort: { pop: -1}}])

3. limit the results to just the first 3 results. What are the top 3 cities in population?
ans.	db.zipcodes.aggregate([{ $group: { _id: { state: "$state", city: "$city"}, pop: {$sum: "$pop"}}}, {$sort: { pop: -1}}, 
	{$limit: 3}])

4. What are the top 3 cities in population in Texas?
ans.	db.zipcodes.aggregate([{$match: {"state" : "TX"}}, {$group: {_id: {state: "$state", city: "$city"}, pop: {$sum:"$pop"}}},
	{$sort: {pop: -1}}, {$limit: 3}]).pretty()

Bonus

1. Write a query to get the average city population for each state.
ans.	db.zipcodes.aggregate( [{ $group: { _id: { state: "$state", city: "$city" }, pop: { $sum: "$pop"}}},{ $group: 
	{ _id: "$_id.state", avgCityPop: { $avg: "$pop"}}}]).pretty()

2. What are the top 3 states in terms of average city population?	 
ans.	db.zipcodes.aggregate( [{ $group: {_id: {state: "$state", city: "$city"}, pop: {$sum: "$pop"}}},{$group:
	{_id: "$_id.state", avgCityPop: { $avg: "$pop"}}}, {$sort: {avgCityPop: -1}}, {$limit:3}] )
